diff --git a/node_modules/serverless/lib/plugins/aws/invoke-local/index.js b/node_modules/serverless/lib/plugins/aws/invoke-local/index.js
index b227110..6d10a53 100644
--- a/node_modules/serverless/lib/plugins/aws/invoke-local/index.js
+++ b/node_modules/serverless/lib/plugins/aws/invoke-local/index.js
@@ -838,12 +838,15 @@ class AwsInvokeLocal {
         if (error.code === 'ERR_REQUIRE_ESM') {
           return await require('../../../utils/import-esm')(`${modulePath}.js`);
         } else if (error.code === 'MODULE_NOT_FOUND') {
-          // Attempt to require handler with `.cjs` extension
-          pathToHandler = `${pathToHandler}.cjs`;
+          // Attempt to require handler with `.cjs` or `.mjs` extension
           try {
-            return require(pathToHandler);
+            if (await fse.pathExists(`${modulePath}.cjs`)) {
+              return require(`${modulePath}.cjs`);
+            } else if (await fse.pathExists(`${modulePath}.mjs`)) {
+              return await require('../../../utils/import-esm')(`${modulePath}.mjs`);
+            }
           } catch (innerError) {
-            // Throw original error if still "MODULE_NOT_FOUND", as not finding module with `.cjs` might be confusing
+            // Throw original error if still "MODULE_NOT_FOUND", as not finding module with `.cjs` or `.mjs` might be confusing
             if (innerError.code !== 'MODULE_NOT_FOUND') {
               throw innerError;
             }
